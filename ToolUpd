-- LocalScript to be placed inside StarterPlayerScripts or StarterCharacterScripts

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local backpack = player.Backpack

-- Create the tool
local tool = Instance.new("Tool")
tool.Name = "JumpSlamTool"
tool.RequiresHandle = true
tool.ToolTip = "Press to drop rocks!"

-- Create the handle for the tool
local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(1, 1, 1)
handle.Anchored = false
handle.CanCollide = false
handle.Transparency = 1 -- Make the handle invisible
handle.Parent = tool

-- Add the tool to the player's backpack
tool.Parent = backpack

-- Function to make the rocks fall
local function dropRocks()
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end -- Ensure humanoid and root part are present

    -- Set the rock count to 25
    local rockCount = 25
    local rockSize = Vector3.new(3, 3, 3)

    -- Function to create a rock with fire effects
    local function createRock()
        local rock = Instance.new("Part")
        rock.Size = rockSize
        rock.Shape = Enum.PartType.Ball
        rock.Anchored = false
        rock.CanCollide = true
        rock.Material = Enum.Material.SmoothPlastic
        rock.BrickColor = BrickColor.new("Dark stone grey")
        rock.Position = rootPart.Position + Vector3.new(math.random(-20, 20), 50, math.random(-20, 20)) -- Position above the player
        rock.Parent = game.Workspace

        -- Add Fire effect to the rock
        local fire = Instance.new("Fire")
        fire.Parent = rock
        fire.Size = 10
        fire.Heat = 25
        fire.Enabled = true

        -- Apply random falling speed
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000) -- Max force to make the rock fall fast
        bodyVelocity.Velocity = Vector3.new(0, -50, 0) -- Falling speed downwards
        bodyVelocity.Parent = rock

        -- Function to handle rock touching the ground and destroying it
        local function onRockTouched(hit)
            -- Check if the rock touches the terrain or any grounded object
            if hit and (hit:IsDescendantOf(game.Workspace.Terrain) or hit:IsA("Part") and hit.Anchored == true) then
                -- Destroy the rock
                rock:Destroy()
            end
        end

        -- Connect the touched event to detect collision with the ground
        rock.Touched:Connect(onRockTouched)
    end

    -- Create multiple rocks falling down
    for i = 1, rockCount do
        wait(math.random() * 0.1) -- Random delay to make rocks fall at different times
        createRock()
    end
end

-- Function to trigger rock drop when the tool is activated
local function onToolActivated()
    -- Call the function to drop rocks after activation
    dropRocks()
end

-- Connect the tool's activation to the onToolActivated function
tool.Activated:Connect(onToolActivated)


-- Add GUI for toggling walk speed
local humanoid = character:WaitForChild("Humanoid")

-- Create a GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create a TextButton
local textButton = Instance.new("TextButton")
textButton.Size = UDim2.new(0, 200, 0, 50)
textButton.Position = UDim2.new(0.5, -100, 0.9, -25)
textButton.Text = "Toggle Walk Speed"
textButton.Parent = screenGui

-- Initial walk speed value
local walkSpeed = 16
humanoid.WalkSpeed = walkSpeed

-- Function to toggle walk speed
local function toggleWalkSpeed()
    if humanoid.WalkSpeed == 16 then
        humanoid.WalkSpeed = 75
    else
        humanoid.WalkSpeed = 16
    end
end

-- Connect the button click event to toggle walk speed
textButton.MouseButton1Click:Connect(toggleWalkSpeed)
